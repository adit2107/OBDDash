{
  "_from": "azure-iot-device",
  "_id": "azure-iot-device@1.7.4",
  "_inBundle": false,
  "_integrity": "sha512-lG+/s5Odnj8sK/UcxKGHRtq6ViZAoVLZw9MK/l6lwXMaJZhe1K8QOHwW1zYosW/tvPqP8WRGFMaX81/XhewmGg==",
  "_location": "/azure-iot-device",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "azure-iot-device",
    "fetchSpec": "latest",
    "name": "azure-iot-device",
    "raw": "azure-iot-device",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/",
    "/azure-iot-device-http"
  ],
  "_resolved": "https://registry.npmjs.org/azure-iot-device/-/azure-iot-device-1.7.4.tgz",
  "_shasum": "975d936cfa0abdbd408fd13c0d739b36d65b2c8d",
  "_shrinkwrap": null,
  "_spec": "azure-iot-device",
  "_where": "D:\\BoschStuff\\Web Dash",
  "author": {
    "name": "Microsoft Corporation"
  },
  "bugs": {
    "url": "https://github.com/Azure/azure-iot-sdk-node/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "azure-iot-common": "1.7.4",
    "azure-iot-http-base": "1.7.4",
    "azure-storage": "^2.8.1",
    "debug": "^3.1.0",
    "lodash": "^4.17.10",
    "machina": "^2.0.1",
    "traverse": "^0.6.6"
  },
  "deprecated": false,
  "description": "Azure IoT device SDK",
  "devDependencies": {
    "@types/debug": "0.0.30",
    "@types/node": "^8.0.37",
    "@types/traverse": "^0.6.29",
    "chai": "^4.1.2",
    "es5-shim": "^4.5.9",
    "istanbul": "^0.4.5",
    "mocha": "^5.2.0",
    "sinon": "^4.0.2",
    "tslint": "^5.7.0",
    "typescript": "2.5.3"
  },
  "engines": {
    "node": ">= 0.10"
  },
  "homepage": "https://github.com/Azure/azure-iot-sdk-node#readme",
  "license": "MIT",
  "main": "device.js",
  "name": "azure-iot-device",
  "optionalDependencies": {},
  "readme": "#azure-iot-device\nThe core components of the Azure IoT device SDK.\n\n[![npm version](https://badge.fury.io/js/azure-iot-device.svg)](https://badge.fury.io/js/azure-iot-device)\n\n## Features\n\nUse the Azure IoT device SDK to:\n* Send event data to Azure IoT Hub.\n* Receive messages from IoT Hub.\n* Communicate with the service via MQTT (optionally over WebSockets), AMQP (optionally over WebSockets),  or HTTP.\n* Synchronize an Azure IoT Hub device Twin with Azure IoT Hub from a device\n* Implement Azure IoT Hub Direct Device Methods on devices\n* Implement Azure IoT Device Mangement features on devices\n\n## Prerequisites\nYou need to install the [Node.js][nodejs_lnk] JavaScript runtime environment to run the Azure IoT JavaScript client SDK on your platform. To check if Node.js supports your platform (OS), verify that an install package is available on the [Node.js download page][nodejs_dwld_lnk].\n\n[npm][npm_lnk] is a command-line package manager that is installed with Node.js is installed, and will be used to install Azure IoT node.js client side SDK.\n\n## Installation\n\n`npm install azure-iot-device` to get the latest version.\n\n## Getting Started\n\nThis package contains the core components of the Azure IoT device SDK, but doesn't include a transport over which to communicate with Azure IoT Hub. Your application **must** require a transport package in addition to the core package to do something useful.\n\nFor example, if you want to send an event from your device to an IoT Hub _using the AMQP protocol_ you must first install the **azure-iot-device-amqp** package:\n\n```\nnpm install azure-iot-device-amqp\n```\n\nThen you can use the code below to send a message to IoT Hub.\n\nNote that for this sample to work, you will need to [setup your IoT hub][lnk-setup-iot-hub] and [provision your device and get its credentials][lnk-manage-iot-hub]. In the code, replace '[IoT Hub device connection string]' with the device credentials created in the IoT Hub.\n\n```js\nvar connectionString = '[IoT Hub device connection string]';\n\n// use factory function from AMQP-specific package\nvar clientFromConnectionString = require('azure-iot-device-amqp').clientFromConnectionString;\n\n// AMQP-specific factory function returns Client object from core package\nvar client = clientFromConnectionString(connectionString);\n\n// use Message object from core package\nvar Message = require('azure-iot-device').Message;\n\nvar connectCallback = function (err) {\n  if (err) {\n    console.error('Could not connect: ' + err);\n  } else {\n    console.log('Client connected');\n    var msg = new Message('some data from my device');\n    client.sendEvent(msg, function (err) {\n      if (err) {\n        console.log(err.toString());\n      } else {\n        console.log('Message sent');\n      };\n    });\n  };\n};\n\n\nclient.open(connectCallback);\n```\n\nSee the `azure-iot-device-*` transport-specific packages for more information.\n\n## More samples\n\nYou will find more samples showing how to use the Azure IoT device SDK for node [here][device-samples].\n\n## Work with the code of the module\n\nIf you want to modify the module's code and/or contribute changes, you will need to setup your development environement following [these instructions][devbox-setup].\n\n## Read More\n\n* [Azure IoT Hub dev center][iot-dev-center]\n* [Azure IoT Hub documentation][iot-hub-documentation]\n* [API reference][node-api-reference]\n\n[nodejs_lnk]: https://nodejs.org/\n[nodejs_dwld_lnk]: https://nodejs.org/en/download/\n[npm_lnk]:https://docs.npmjs.com/getting-started/what-is-npm\n[lnk-setup-iot-hub]: https://aka.ms/howtocreateazureiothub\n[lnk-manage-iot-hub]: https://aka.ms/manageiothub\n[devbox-setup]: https://github.com/Azure/azure-iot-sdk-node/blob/master/doc/node-devbox-setup.md\n[device-samples]: https://github.com/Azure/azure-iot-sdk-node/tree/master/device/samples\n[node-api-reference]: https://docs.microsoft.com/en-us/javascript/api/azure-iot-device/\n[iot-dev-center]: http://azure.com/iotdev\n[iot-hub-documentation]: https://docs.microsoft.com/en-us/azure/iot-hub/\n\n",
  "readmeFilename": "readme.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/Azure/azure-iot-sdk-node.git"
  },
  "scripts": {
    "alltest": "istanbul cover node_modules/mocha/bin/_mocha -- --reporter spec \"test/**/_*_test*.js\"",
    "alltest-min": "istanbul cover --report none node_modules/mocha/bin/_mocha -- --reporter dot \"test/**/_*_test*.js\"",
    "build": "tsc",
    "check-cover": "istanbul check-coverage --statements 95 --branches 87 --lines 97 --functions 92",
    "ci": "npm -s run lint && npm -s run build && npm -s run alltest-min && npm -s run check-cover",
    "lint": "tslint --project . -c ../../tslint.json",
    "test": "npm -s run lint && npm -s run build && npm -s run unittest",
    "unittest": "istanbul cover node_modules/mocha/bin/_mocha -- --reporter spec \"test/**/_*_test.js\"",
    "unittest-min": "istanbul cover --report none node_modules/mocha/bin/_mocha -- --reporter dot \"test/**/_*_test.js\""
  },
  "typings": "device.d.ts",
  "version": "1.7.4"
}
